---
# safe uninstall tasks file for jd_cmd
- name: Stat of install directory
  become: yes
  stat:
    path: "{{ install_dest_full }}"
  register: jc_install_dir_stat

- name: Safe uninstall
  become: yes
  block:
    - name: Include unarchive tasks
      include_tasks: unarchive.yml
      when: not ansible_check_mode

    - name: Install rsync for synchronize module
      package:
        name:
          - rsync
        state: present
      notify: Remove rsync

    - name: Compare unarchived content with installed
      synchronize:
        src: "{{ jd_cmd_temp_dir.path }}/{{ jd_cmd_top_dest_name }}/"
        dest: "{{ install_dest_full }}/"
        checksum: yes
        times: no
        owner: no
        delete: yes
      check_mode: yes
      delegate_to: "{{ inventory_hostname }}"
      register: rsync_result
      when: not ansible_check_mode

    - name: Fail if the installed content doesn't match with the unarchived
      fail:
        msg: Installed content doesn't match with archive content
      when:
        - not ansible_check_mode
        - rsync_result.changed

    - name: Remove installed content
      file:
        name: "{{ install_dest_full }}"
        state: absent
  when: jc_install_dir_stat.stat.exists

- name: Safe executable uninstall
  become: yes
  block:
    - name: Create an temporary file for an executable
      tempfile:
      register: jd_cmd_exe_tmp
      notify: Remove temporary file for executable

    - name: Create executable for jd-cmd
      template:
        src: jd-cmd.j2
        dest: "{{ jd_cmd_exe_tmp.path }}"
        mode: '0555'

    - name: Compare installed executable
      copy:
        src: "{{ jd_cmd_exe_tmp.path }}"
        dest: "{{ executable_full }}"
      check_mode: yes
      register: exe_result

    - name: Fail if the installed executable doesn't match
      fail:
        msg: Installed executable doesn't match
      when: exe_result.changed

    - name: Remove installed executable
      file:
        name: "{{ executable_full }}"
        state: absent
